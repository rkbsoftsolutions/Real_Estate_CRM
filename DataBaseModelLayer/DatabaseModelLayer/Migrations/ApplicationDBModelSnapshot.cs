// <auto-generated />
using System;
using CRM.DatabaseModelLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;


namespace CRM.DatabaseModelLayer.Migrations
{
    [DbContext(typeof(ApplicationDB))]
    partial class ApplicationDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccountCore.DataModels.ApplicationRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRoles");
                });

            modelBuilder.Entity("AccountCore.DataModels.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("ApplicationUserRoleId");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("ApplicationUserRoleId");

                    b.ToTable("ApplicationUserRole");
                });

            modelBuilder.Entity("AccountCore.DataModels.ApplicationUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Application_Modules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ApplicationModules");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Asset_Master", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssetLink");

                    b.Property<int>("AssetType");

                    b.Property<bool>("IsActive");

                    b.Property<Guid?>("Project_MasterId");

                    b.HasKey("Id");

                    b.HasIndex("Project_MasterId");

                    b.ToTable("AssetMasters");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Building_Plan_Master", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<Guid>("Project_Master_Id");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Title");

                    b.Property<int>("Units_Types");

                    b.HasKey("Id");

                    b.HasIndex("Project_Master_Id");

                    b.ToTable("BuildingPlanMasters");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Mouels_Roles_Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Application_Modules_Id");

                    b.Property<Guid>("Application_Roles_Id");

                    b.Property<bool>("IsActive");

                    b.HasKey("Id");

                    b.HasIndex("Application_Modules_Id");

                    b.HasIndex("Application_Roles_Id");

                    b.ToTable("MouelsRolesLink");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Project_Master", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AreaLength");

                    b.Property<decimal>("AreaWidth");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndSellingDate");

                    b.Property<decimal>("GoalSellingAmount")
                        .HasColumnType("decimal(12, 0)");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.Property<DateTime>("StartSellingDate");

                    b.Property<string>("Title");

                    b.Property<decimal>("TotalProjectArea")
                        .HasColumnType("decimal(12, 0)");

                    b.Property<int>("Units_Types");

                    b.HasKey("Id");

                    b.ToTable("Project_Master");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Asset_Master", b =>
                {
                    b.HasOne("CRM.DatabaseModelLayer.Models.Project_Master")
                        .WithMany("ProjectAssets")
                        .HasForeignKey("Project_MasterId");
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Building_Plan_Master", b =>
                {
                    b.HasOne("CRM.DatabaseModelLayer.Models.Project_Master", "Project_Master")
                        .WithMany("Buildings")
                        .HasForeignKey("Project_Master_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM.DatabaseModelLayer.Models.Mouels_Roles_Link", b =>
                {
                    b.HasOne("CRM.DatabaseModelLayer.Models.Application_Modules", "application_Modules")
                        .WithMany()
                        .HasForeignKey("Application_Modules_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AccountCore.DataModels.ApplicationRoles", "applicationRoles")
                        .WithMany()
                        .HasForeignKey("Application_Roles_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
